#!/bin/bash
#This script is for a specific architecture make changes based on the counters available on your machine.
#command to run - '/home/iiitd/HPC_BOOST/test/run_likwid.sh your_command'

#root directory
root="/home/iiitd/HPC_BOOST"

#max value of random malware injection interval (in ms)
rand_value=1000

#trojan
mal1_core=$2

#name2
mal2_core=

#name3
mal3_core=

#name4
mal4_core=

#trojan
mal5_core=

#name2
mal6_core=

#fib
normal1_core=

#matmul
normal2_core=

#heat
normal3_core=

#mergesort
normal4_core=

normal5_core=

normal6_core=

mal1_command="$root/malware/Trojans/Linux.Phantasmagoria/Hunter"
mal2_command="/home/hpc/Malware-Exhibit/Linux/Backdoors/Linux.Bash-door/bashdoor"
mal3_command=""
mal4_command=""
mal5_command=""
mal6_command=""
normal1_command="$root/normal/fib"
normal2_command="$root/normal/matmul"
normal3_command="$root/normal/heat"
normal4_command="$root/normal/merge_sort"
normal5_command=""
normal6_command=""

# Function to check if a value is an integer between 0 and 3
is_valid_core() {
    local value="$1"
    if [[ "$value" =~ ^[0-5]$ ]]; then
        return 0  # Value is valid
    else
        return 1  # Value is not valid
    fi
}

# Function to clean up
cleanup() {
    local reason="$1"
    echo "Cleaning up due to: $reason"
    # Kill the malicious process if it is running
    if [ -n "$mal1_core" ]; then
        pkill -f $mal1_command
    fi

    if [ -n "$mal2_core" ]; then
        pkill -f $mal2_command
    fi

    if [ -n "$mal3_core" ]; then
        pkill -f $mal3_command
    fi

    if [ -n "$mal4_core" ]; then
        pkill -f $mal4_command
    fi

    if [ -n "$mal5_core" ]; then
        pkill -f $mal4_command
    fi

    if [ -n "$mal6_core" ]; then
        pkill -f $mal4_command
    fi
    
    if [ -n "$normal1_core" ]; then
        pkill -f $normal1_command
    fi

    if [ -n "$normal2_core" ]; then
        pkill -f  $normal2_command
    fi

    if [ -n "$normal3_core" ]; then
        pkill -f  $normal3_command
    fi

    if [ -n "$normal4_core" ]; then
        pkill -f  $normal4_command
    fi

    if [ -n "$normal5_core" ]; then
        pkill -f  $normal3_command
    fi

    if [ -n "$normal6_core" ]; then
        pkill -f  $normal4_command
    fi

    if [ "$reason" = "INT" ]; then
        make -C $root/normal clean
        rm $output_log
        rm $output_log_temp
        rm $output_log_temp_err
        exit 1
    fi
}

# Export the cleanup function
export -f cleanup

# Trap the interrupt signal (Ctrl+C)
trap 'cleanup INT' INT

# Validate core values
for core in "$mal1_core" "$mal2_core" "$mal3_core" "$mal4_core" "$mal5_core" "$mal6_core" \
            "$normal1_core" "$normal2_core" "$normal3_core" "$normal4_core" "$normal5_core" "$normal6_core"; do
    if [ -n "$core" ] && ! is_valid_core "$core" ]; then
        echo "Error: Invalid core value '$core'. Please use an integer between 0 and 3."
        cleanup INT
    fi
done

make -C $root/normal

#PMC = 4 values
PMC=("LD_BLOCKS_STORE_FORWARD" 
"LD_BLOCKS_NO_SR" 
"L1D_PEND_MISS_PENDING" 
"MISALIGN_MEM_REF_LOADS" 
"MISALIGN_MEM_REF_STORES" 
"MISALIGN_MEM_REF_ANY" 
"L1D_PEND_MISS_PENDING_CYCLES_ANY" 
"LD_BLOCKS_PARTIAL_ADDRESS_ALIAS" 
"DTLB_LOAD_MISSES_CAUSES_A_WALK" 
"DTLB_LOAD_MISSES_WALK_COMPLETED_4K" 
"L1D_PEND_MISS_PENDING_CYCLES" 
"DTLB_LOAD_MISSES_WALK_COMPLETED_LARGE" 
"DTLB_LOAD_MISSES_WALK_COMPLETED" 
"DTLB_LOAD_MISSES_WALK_DURATION" 
"CYCLE_ACTIVITY_CYCLES_L1D_PENDING" 
"DTLB_LOAD_MISSES_STLB_HIT_4K" 
"DTLB_LOAD_MISSES_STLB_HIT_2M" 
"DTLB_LOAD_MISSES_STLB_HIT" 
"CYCLE_ACTIVITY_STALLS_L1D_PENDING" 
"DTLB_LOAD_MISSES_PDE_CACHE_MISS" 
"INT_MISC_RECOVERY_CYCLES" 
"INT_MISC_RECOVERY_COUNT" 
"INT_MISC_RECOVERY_CYCLES_ANY" 
"INT_MISC_RECOVERY_COUNT_ANY" 
"UOPS_ISSUED_ANY" 
"UOPS_ISSUED_FLAGS_MERGE" 
"UOPS_ISSUED_SLOW_LEA" 
"UOPS_ISSUED_SINGLE_MUL" 
"UOPS_ISSUED_USED_CYCLES" 
"UOPS_ISSUED_STALL_CYCLES" 
"UOPS_ISSUED_TOTAL_CYCLES" 
"UOPS_ISSUED_CORE_USED_CYCLES" 
"UOPS_ISSUED_CORE_STALL_CYCLES" 
"UOPS_ISSUED_CORE_TOTAL_CYCLES" 
"UOPS_ISSUED_CYCLES_GE_1_UOPS_EXEC" 
"UOPS_ISSUED_CYCLES_GE_2_UOPS_EXEC" 
"UOPS_ISSUED_CYCLES_GE_3_UOPS_EXEC" 
"UOPS_ISSUED_CYCLES_GE_4_UOPS_EXEC" 
"UOPS_ISSUED_CYCLES_GE_5_UOPS_EXEC" 
"UOPS_ISSUED_CYCLES_GE_6_UOPS_EXEC" 
"ARITH_DIVIDER_CYCLES" 
"ARITH_DIVIDER_UOPS" 
"L2_RQSTS_ALL_DEMAND_DATA_RD_MISS" 
"L2_RQSTS_ALL_DEMAND_DATA_RD_HIT" 
"L2_RQSTS_ALL_DEMAND_DATA_RD" 
"L2_RQSTS_RFO_HIT" 
"L2_RQSTS_RFO_MISS" 
"L2_RQSTS_ALL_RFO" 
"L2_RQSTS_CODE_RD_HIT" 
"L2_RQSTS_CODE_RD_MISS" 
"L2_RQSTS_ALL_DEMAND_MISS" 
"L2_RQSTS_ALL_DEMAND_REFERENCES" 
"L2_RQSTS_ALL_CODE_RD" 
"L2_RQSTS_L2_PF_HIT" 
"L2_RQSTS_L2_PF_MISS" 
"L2_RQSTS_ALL_PF" 
"L2_RQSTS_MISS" 
"L2_RQSTS_REFERENCES" 
"L2_DEMAND_RQST_WB_HIT" 
"LONGEST_LAT_CACHE_REFERENCE" 
"LONGEST_LAT_CACHE_MISS" 
"CPU_CLOCK_UNHALTED_THREAD_P" 
"CPU_CLOCK_UNHALTED_THREAD_P_ANY" 
"CPU_CLOCK_UNHALTED_REF_XCLK" 
"CPU_CLOCK_UNHALTED_REF_XCLK_ANY" 
"CPU_CLOCK_UNHALTED_ONE_THREAD_ACTIVE" 
"CPU_CLOCK_UNHALTED_TOTAL_CYCLES"  
"L1D_PEND_MISS_FB_FULL_REQUEST" 
"L1D_PEND_MISS_FB_FULL" 
"DTLB_STORE_MISSES_CAUSES_A_WALK" 
"DTLB_STORE_MISSES_WALK_COMPLETED_4K" 
"DTLB_STORE_MISSES_WALK_COMPLETED_LARGE" 
"DTLB_STORE_MISSES_WALK_COMPLETED" 
"DTLB_STORE_MISSES_WALK_DURATION" 
"DTLB_STORE_MISSES_STLB_HIT_4K" 
"DTLB_STORE_MISSES_STLB_HIT_2M" 
"DTLB_STORE_MISSES_STLB_HIT" 
"DTLB_STORE_MISSES_PDE_CACHE_MISS" 
"LOAD_HIT_PRE_SW_PF" 
"LOAD_HIT_PRE_HW_PF" 
"EPT_WALK_CYCLES" 
"L1D_REPLACEMENT" 
"L1D_ALLOCATED_IN_M" 
"L1D_M_EVICT" 
"L1D_ALL_M_REPLACEMENT" 
"TX_MEM_ABORT_CONFLICT" 
"TX_MEM_ABORT_CAPACITY_WRITE" 
"TX_MEM_ABORT_HLE_STORE_TO_ELIDED_LOCK" 
"TX_MEM_ABORT_HLE_ELISION_BUFFER_NOT_EMPTY" 
"TX_MEM_ABORT_HLE_ELISION_BUFFER_MISMATCH" 
"TX_MEM_ABORT_HLE_ELISION_BUFFER_UNSUPPORTED_ALIGNMENT" 
"TX_MEM_HLE_ELISION_BUFFER_FULL" 
"MOVE_ELIMINATION_INT_NOT_ELIMINATED" 
"MOVE_ELIMINATION_SIMD_NOT_ELIMINATED" 
"MOVE_ELIMINATION_INT_ELIMINATED" 
"MOVE_ELIMINATION_SIMD_ELIMINATED" 
"CPL_CYCLES_RING0" 
"CPL_CYCLES_RING123" 
"CPL_CYCLES_RING0_TRANS" 
"TX_EXEC_MISC1" 
"TX_EXEC_MISC2" 
"TX_EXEC_MISC3" 
"TX_EXEC_MISC4" 
"TX_EXEC_MISC5" 
"RS_EVENTS_EMPTY_CYCLES" 
"RS_EVENTS_EMPTY_END" 
"OFFCORE_REQUESTS_OUTSTANDING_DEMAND_DATA_RD" 
"OFFCORE_REQUESTS_OUTSTANDING_DEMAND_CODE_RD" 
"OFFCORE_REQUESTS_OUTSTANDING_DEMAND_RFO" 
"OFFCORE_REQUESTS_OUTSTANDING_ALL_DATA_RD" 
"OFFCORE_REQUESTS_OUTSTANDING_CYCLES_WITH_DEMAND_DATA_RD" 
"OFFCORE_REQUESTS_OUTSTANDING_CYCLES_WITH_DATA_RD" 
"OFFCORE_REQUESTS_OUTSTANDING_DEMAND_DATA_RD_C6" 
"LOCK_CYCLES_SPLIT_LOCK_UC_LOCK_DURATION" 
"LOCK_CYCLES_SPLIT_LOCK_UC_LOCK_COUNT" 
"LOCK_CYCLES_CACHE_LOCK_DURATION" 
"LOCK_CYCLES_CACHE_LOCK_COUNT" 
"IDQ_EMPTY" 
"IDQ_MITE_UOPS" 
"IDQ_DSB_UOPS" 
"IDQ_MS_DSB_UOPS" 
"IDQ_MS_MITE_UOPS" 
"IDQ_MS_UOPS" 
"IDQ_DSB_ALL_UOPS" 
"IDQ_MITE_ALL_UOPS" 
"IDQ_ALL_UOPS" 
"IDQ_MITE_CYCLES" 
"IDQ_MITE_CYCLES_1_UOPS" 
"IDQ_MITE_CYCLES_2_UOPS" 
"IDQ_MITE_CYCLES_3_UOPS" 
"IDQ_MITE_CYCLES_4_UOPS" 
"IDQ_DSB_CYCLES" 
"IDQ_DSB_CYCLES_1_UOPS" 
"IDQ_DSB_CYCLES_2_UOPS" 
"IDQ_DSB_CYCLES_3_UOPS" 
"IDQ_DSB_CYCLES_4_UOPS" 
"IDQ_MS_DSB_CYCLES" 
"IDQ_MS_DSB_CYCLES_1_UOPS" 
"IDQ_MS_DSB_CYCLES_2_UOPS" 
"IDQ_MS_DSB_CYCLES_3_UOPS" 
"IDQ_MS_DSB_CYCLES_4_UOPS" 
"IDQ_MS_DSB_OCCUR" 
"IDQ_MS_MITE_CYCLES" 
"IDQ_MS_MITE_CYCLES_1_UOPS" 
"IDQ_MS_MITE_CYCLES_2_UOPS" 
"IDQ_MS_MITE_CYCLES_3_UOPS" 
"IDQ_MS_MITE_CYCLES_4_UOPS" 
"IDQ_MS_CYCLES" 
"IDQ_MS_CYCLES_1_UOPS" 
"IDQ_MS_CYCLES_2_UOPS" 
"IDQ_MS_CYCLES_3_UOPS" 
"IDQ_MS_CYCLES_4_UOPS" 
"IDQ_MS_SWITCHES" 
"IDQ_ALL_DSB_CYCLES_ANY_UOPS" 
"IDQ_ALL_DSB_CYCLES_1_UOPS" 
"IDQ_ALL_DSB_CYCLES_2_UOPS" 
"IDQ_ALL_DSB_CYCLES_3_UOPS" 
"IDQ_ALL_DSB_CYCLES_4_UOPS" 
"IDQ_ALL_MITE_CYCLES_ANY_UOPS" 
"IDQ_ALL_MITE_CYCLES_1_UOPS" 
"IDQ_ALL_MITE_CYCLES_2_UOPS" 
"IDQ_ALL_MITE_CYCLES_3_UOPS" 
"IDQ_ALL_MITE_CYCLES_4_UOPS" 
"IDQ_ALL_CYCLES_ANY_UOPS" 
"IDQ_ALL_CYCLES_1_UOPS" 
"IDQ_ALL_CYCLES_2_UOPS" 
"IDQ_ALL_CYCLES_3_UOPS" 
"IDQ_ALL_CYCLES_4_UOPS" 
"ICACHE_HIT" 
"ICACHE_MISSES" 
"ICACHE_ACCESSES" 
"ICACHE_IFETCH_STALL" 
"ITLB_MISSES_CAUSES_A_WALK" 
"ITLB_MISSES_WALK_COMPLETED_4K" 
"ITLB_MISSES_WALK_COMPLETED_LARGE" 
"ITLB_MISSES_WALK_COMPLETED" 
"ITLB_MISSES_WALK_DURATION" 
"ITLB_MISSES_STLB_HIT_4K" 
"ITLB_MISSES_STLB_HIT_2M" 
"ITLB_MISSES_STLB_HIT" 
"ILD_STALL_LCP" 
"ILD_STALL_IQ_FULL" 
"BR_INST_EXEC_COND_TAKEN" 
"BR_INST_EXEC_COND_NON_TAKEN" 
"BR_INST_EXEC_DIRECT_JMP_TAKEN" 
"BR_INST_EXEC_DIRECT_JMP_NON_TAKEN" 
"BR_INST_EXEC_INDIRECT_JMP_NON_CALL_RET_TAKEN" 
"BR_INST_EXEC_INDIRECT_JMP_NON_CALL_RET_NON_TAKEN" 
"BR_INST_EXEC_RETURN_NEAR_TAKEN" 
"BR_INST_EXEC_RETURN_NEAR_NON_TAKEN" 
"BR_INST_EXEC_DIRECT_NEAR_CALL_TAKEN" 
"BR_INST_EXEC_DIRECT_NEAR_CALL_NON_TAKEN" 
"BR_INST_EXEC_INDIRECT_NEAR_CALL_TAKEN" 
"BR_INST_EXEC_INDIRECT_NEAR_CALL_NON_TAKEN" 
"BR_INST_EXEC_ALL_CONDITIONAL" 
"BR_INST_EXEC_ALL_DIRECT_JMP" 
"BR_INST_EXEC_ALL_DIRECT_NEAR_CALL" 
"BR_INST_EXEC_ALL_INDIRECT_JUMP_NON_CALL_RET" 
"BR_INST_EXEC_ALL_INDIRECT_NEAR_RETURN" 
"BR_INST_EXEC_ALL_BRANCHES" 
"BR_MISP_EXEC_COND_TAKEN" 
"BR_MISP_EXEC_COND_NON_TAKEN" 
"BR_MISP_EXEC_INDIRECT_JMP_NON_CALL_RET_TAKEN" 
"BR_MISP_EXEC_INDIRECT_JMP_NON_CALL_RET_NON_TAKEN" 
"BR_MISP_EXEC_RETURN_NEAR_TAKEN" 
"BR_MISP_EXEC_RETURN_NEAR_NON_TAKEN" 
"BR_MISP_EXEC_DIRECT_NEAR_CALL_TAKEN" 
"BR_MISP_EXEC_DIRECT_NEAR_CALL_NON_TAKEN" 
"BR_MISP_EXEC_INDIRECT_NEAR_CALL_TAKEN" 
"BR_MISP_EXEC_INDIRECT_NEAR_CALL_NON_TAKEN" 
"BR_MISP_EXEC_ALL_CONDITIONAL" 
"BR_MISP_EXEC_ALL_INDIRECT_JUMP_NON_CALL_RET" 
"BR_MISP_EXEC_ALL_BRANCHES" 
"IDQ_UOPS_NOT_DELIVERED_CORE" 
"IDQ_UOPS_NOT_DELIVERED_CYCLES_0_UOPS_DELIV_CORE" 
"IDQ_UOPS_NOT_DELIVERED_CYCLES_LE_1_UOP_DELIV_CORE" 
"IDQ_UOPS_NOT_DELIVERED_CYCLES_LE_2_UOP_DELIV_CORE" 
"IDQ_UOPS_NOT_DELIVERED_CYCLES_LE_3_UOP_DELIV_CORE" 
"IDQ_UOPS_NOT_DELIVERED_CYCLES_FE_WAS_OK" 
"UOPS_EXECUTED_PORT_PORT_0" 
"UOPS_EXECUTED_PORT_PORT_1" 
"UOPS_EXECUTED_PORT_PORT_2" 
"UOPS_EXECUTED_PORT_PORT_3" 
"UOPS_EXECUTED_PORT_PORT_4" 
"UOPS_EXECUTED_PORT_PORT_5" 
"UOPS_EXECUTED_PORT_PORT_6" 
"UOPS_EXECUTED_PORT_PORT_7" 
"UOPS_EXECUTED_PORT_PORT_0_CORE" 
"UOPS_EXECUTED_PORT_PORT_1_CORE" 
"UOPS_EXECUTED_PORT_PORT_2_CORE" 
"UOPS_EXECUTED_PORT_PORT_3_CORE" 
"UOPS_EXECUTED_PORT_PORT_4_CORE" 
"UOPS_EXECUTED_PORT_PORT_5_CORE" 
"UOPS_EXECUTED_PORT_PORT_6_CORE" 
"UOPS_EXECUTED_PORT_PORT_7_CORE" 
"UOPS_EXECUTED_PORT_ARITH_PORTS" 
"UOPS_EXECUTED_PORT_ARITH_PORTS_CORE" 
"UOPS_EXECUTED_PORT_DATA_PORTS" 
"RESOURCE_STALLS_ANY" 
"RESOURCE_STALLS_RS" 
"RESOURCE_STALLS_SB" 
"RESOURCE_STALLS_ROB" 
"CYCLE_ACTIVITY_CYCLES_L2_PENDING" 
"CYCLE_ACTIVITY_CYCLES_MEM_ANY" 
"CYCLE_ACTIVITY_CYCLES_LDM_PENDING" 
"CYCLE_ACTIVITY_CYCLES_NO_EXECUTE" 
"CYCLE_ACTIVITY_STALLS_TOTAL" 
"CYCLE_ACTIVITY_STALLS_L2_PENDING" 
"CYCLE_ACTIVITY_STALLS_MEM_ANY" 
"CYCLE_ACTIVITY_STALLS_LDM_PENDING" 
"LSD_UOPS" 
"LSD_UOPS_CYCLES_1" 
"LSD_UOPS_CYCLES_2" 
"LSD_UOPS_CYCLES_3" 
"LSD_UOPS_CYCLES_4" 
"LSD_UOPS_CYCLES_ACTIVE" 
"LSD_UOPS_CYCLES_INACTIVE" 
"DSB2MITE_SWITCHES_COUNT" 
"DSB2MITE_SWITCHES_PENALTY_CYCLES" 
"ITLB_ITLB_FLUSH" 
"OFFCORE_REQUESTS_DEMAND_DATA_RD" 
"OFFCORE_REQUESTS_DEMAND_CODE_RD" 
"OFFCORE_REQUESTS_DEMAND_RFO" 
"OFFCORE_REQUESTS_ALL_DATA_RD" 
"UOPS_EXECUTED_THREAD" 
"UOPS_EXECUTED_USED_CYCLES" 
"UOPS_EXECUTED_STALL_CYCLES" 
"UOPS_EXECUTED_TOTAL_CYCLES" 
"UOPS_EXECUTED_CYCLES_GE_1_UOPS_EXEC" 
"UOPS_EXECUTED_CYCLES_GE_2_UOPS_EXEC" 
"UOPS_EXECUTED_CYCLES_GE_3_UOPS_EXEC" 
"UOPS_EXECUTED_CYCLES_GE_4_UOPS_EXEC" 
"UOPS_EXECUTED_CYCLES_GE_5_UOPS_EXEC" 
"UOPS_EXECUTED_CYCLES_GE_6_UOPS_EXEC" 
"UOPS_EXECUTED_CYCLES_GE_7_UOPS_EXEC" 
"UOPS_EXECUTED_CYCLES_GE_8_UOPS_EXEC" 
"UOPS_EXECUTED_CORE" 
"UOPS_EXECUTED_CORE_USED_CYCLES" 
"UOPS_EXECUTED_CORE_STALL_CYCLES" 
"UOPS_EXECUTED_CORE_TOTAL_CYCLES" 
"UOPS_EXECUTED_CORE_CYCLES_GE_1_UOPS_EXEC" 
"UOPS_EXECUTED_CORE_CYCLES_GE_2_UOPS_EXEC" 
"UOPS_EXECUTED_CORE_CYCLES_GE_3_UOPS_EXEC" 
"UOPS_EXECUTED_CORE_CYCLES_GE_4_UOPS_EXEC" 
"UOPS_EXECUTED_CORE_CYCLES_GE_5_UOPS_EXEC" 
"UOPS_EXECUTED_CORE_CYCLES_GE_6_UOPS_EXEC" 
"UOPS_EXECUTED_CORE_CYCLES_GE_7_UOPS_EXEC" 
"UOPS_EXECUTED_CORE_CYCLES_GE_8_UOPS_EXEC" 
"OFFCORE_REQUESTS_BUFFER_SQ_FULL" 
"PAGE_WALKER_LOADS_DTLB_L1" 
"PAGE_WALKER_LOADS_ITLB_L1" 
"PAGE_WALKER_LOADS_DTLB_L2" 
"PAGE_WALKER_LOADS_ITLB_L2" 
"PAGE_WALKER_LOADS_DTLB_L3" 
"PAGE_WALKER_LOADS_ITLB_L3" 
"PAGE_WALKER_LOADS_DTLB_MEMORY" 
"PAGE_WALKER_LOADS_ITLB_MEMORY" 
"PAGE_WALKER_LOADS_EPT_DTLB_L1" 
"PAGE_WALKER_LOADS_EPT_ITLB_L1" 
"PAGE_WALKER_LOADS_EPT_DTLB_L2" 
"PAGE_WALKER_LOADS_EPT_ITLB_L2" 
"PAGE_WALKER_LOADS_EPT_DTLB_L3" 
"PAGE_WALKER_LOADS_EPT_ITLB_L3" 
"PAGE_WALKER_LOADS_EPT_DTLB_MEMORY" 
"PAGE_WALKER_LOADS_EPT_ITLB_MEMORY" 
"TLB_FLUSH_DTLB_THREAD" 
"TLB_FLUSH_STLB_ANY" 
"INST_RETIRED_PREC_DIST" 
"INST_RETIRED_ANY_P" 
"OTHER_ASSISTS_AVX_TO_SSE" 
"OTHER_ASSISTS_SSE_TO_AVX" 
"OTHER_ASSISTS_ANY_WB_ASSIST" 
"UOPS_RETIRED_ALL" 
"UOPS_RETIRED_CORE_ALL" 
"UOPS_RETIRED_RETIRE_SLOTS" 
"UOPS_RETIRED_CORE_RETIRE_SLOTS" 
"UOPS_RETIRED_USED_CYCLES" 
"UOPS_RETIRED_STALL_CYCLES" 
"UOPS_RETIRED_TOTAL_CYCLES" 
"UOPS_RETIRED_CORE_USED_CYCLES" 
"UOPS_RETIRED_CORE_STALL_CYCLES" 
"UOPS_RETIRED_CORE_TOTAL_CYCLES" 
"UOPS_RETIRED_CYCLES_GE_1_UOPS_EXEC" 
"UOPS_RETIRED_CYCLES_GE_2_UOPS_EXEC" 
"UOPS_RETIRED_CYCLES_GE_3_UOPS_EXEC" 
"UOPS_RETIRED_CYCLES_GE_4_UOPS_EXEC" 
"UOPS_RETIRED_CYCLES_GE_5_UOPS_EXEC" 
"UOPS_RETIRED_CYCLES_GE_6_UOPS_EXEC" 
"MACHINE_CLEARS_CYCLES" 
"MACHINE_CLEARS_COUNT" 
"MACHINE_CLEARS_MEMORY_ORDERING" 
"MACHINE_CLEARS_SMC" 
"MACHINE_CLEARS_MASKMOV" 
"BR_INST_RETIRED_ALL_BRANCHES" 
"BR_INST_RETIRED_CONDITIONAL" 
"BR_INST_RETIRED_NEAR_CALL" 
"BR_INST_RETIRED_NEAR_RETURN" 
"BR_INST_RETIRED_NOT_TAKEN" 
"BR_INST_RETIRED_NEAR_TAKEN" 
"BR_INST_RETIRED_FAR_BRANCH" 
"BR_MISP_RETIRED_ALL_BRANCHES" 
"BR_MISP_RETIRED_CONDITIONAL" 
"BR_MISP_RETIRED_NEAR_NOT_TAKEN" 
"BR_MISP_RETIRED_NEAR_TAKEN" 
"AVX_INSTS_LOADS" 
"AVX_INSTS_STORES" 
"AVX_INSTS_CALC" 
"AVX_INSTS_ALL" 
"HLE_RETIRED_START" 
"HLE_RETIRED_COMMIT" 
"HLE_RETIRED_ABORTED" 
"HLE_RETIRED_ABORTED_MISC1" 
"HLE_RETIRED_ABORTED_MISC2" 
"HLE_RETIRED_ABORTED_MISC3" 
"HLE_RETIRED_ABORTED_MISC4" 
"HLE_RETIRED_ABORTED_MISC5" 
"RTM_RETIRED_START" 
"RTM_RETIRED_COMMIT" 
"RTM_RETIRED_ABORTED" 
"RTM_RETIRED_ABORTED_MISC1" 
"RTM_RETIRED_ABORTED_MISC2" 
"RTM_RETIRED_ABORTED_MISC3" 
"RTM_RETIRED_ABORTED_MISC4" 
"RTM_RETIRED_ABORTED_MISC5" 
"FP_ASSIST_X87_OUTPUT" 
"FP_ASSIST_X87_INPUT" 
"FP_ASSIST_SIMD_OUTPUT" 
"FP_ASSIST_SIMD_INPUT" 
"FP_ASSIST_ANY" 
"ROB_MISC_EVENT_LBR_INSERTS" 
"MEM_UOPS_RETIRED_LOADS" 
"MEM_UOPS_RETIRED_STORES" 
"MEM_UOPS_RETIRED_ALL" 
"MEM_UOPS_RETIRED_LOADS_STLB_MISS" 
"MEM_UOPS_RETIRED_STORES_STLB_MISS" 
"MEM_UOPS_RETIRED_LOADS_LOCK" 
"MEM_UOPS_RETIRED_STORES_LOCK" 
"MEM_UOPS_RETIRED_LOADS_SPLIT" 
"MEM_UOPS_RETIRED_STORES_SPLIT" 
"MEM_LOAD_UOPS_RETIRED_L1_HIT" 
"MEM_LOAD_UOPS_RETIRED_L1_MISS" 
"MEM_LOAD_UOPS_RETIRED_L1_ALL" 
"MEM_LOAD_UOPS_RETIRED_L2_HIT" 
"MEM_LOAD_UOPS_RETIRED_L2_MISS" 
"MEM_LOAD_UOPS_RETIRED_L2_ALL" 
"MEM_LOAD_UOPS_RETIRED_L3_HIT" 
"MEM_LOAD_UOPS_RETIRED_L3_MISS" 
"MEM_LOAD_UOPS_RETIRED_L3_ALL" 
"MEM_LOAD_UOPS_RETIRED_HIT_LFB" 
"MEM_LOAD_UOPS_RETIRED_ALL_MISS" 
"MEM_LOAD_UOPS_RETIRED_ALL_HIT" 
"MEM_LOAD_UOPS_RETIRED_ALL_ALL" 
"MEM_LOAD_UOPS_L3_HIT_RETIRED_XSNP_MISS" 
"MEM_LOAD_UOPS_L3_HIT_RETIRED_XSNP_HIT" 
"MEM_LOAD_UOPS_L3_HIT_RETIRED_XSNP_HITM" 
"MEM_LOAD_UOPS_L3_HIT_RETIRED_XSNP_NONE" 
"MEM_LOAD_UOPS_L3_MISS_RETIRED_LOCAL_DRAM" 
"MEM_LOAD_UOPS_L3_MISS_RETIRED_REMOTE_DRAM" 
"MEM_LOAD_UOPS_L3_MISS_RETIRED_REMOTE_HITM" 
"MEM_LOAD_UOPS_L3_MISS_RETIRED_REMOTE_FWD" 
"BACLEARS_ANY" 
"L2_TRANS_DEMAND_DATA_RD" 
"L2_TRANS_RFO" 
"L2_TRANS_CODE_RD" 
"L2_TRANS_ALL_PF" 
"L2_TRANS_L1D_WB" 
"L2_TRANS_L2_FILL" 
"L2_TRANS_L2_WB" 
"L2_TRANS_ALL_REQUESTS" 
"L2_LINES_IN_I" 
"L2_LINES_IN_S" 
"L2_LINES_IN_E" 
"L2_LINES_IN_ALL" 
"L2_LINES_OUT_DEMAND_CLEAN" 
"L2_LINES_OUT_DEMAND_DIRTY" 
"OFFCORE_RESPONSE_0_OPTIONS" 
"OFFCORE_RESPONSE_0_LOCAL_DRAM" 
"OFFCORE_RESPONSE_0_REMOTE_DRAM" 
"OFFCORE_RESPONSE_0_DMND_DATA_RD_ANY" 
"OFFCORE_RESPONSE_0_DMND_RFO_ANY" 
"OFFCORE_RESPONSE_0_DMND_CODE_RD_ANY" 
"OFFCORE_RESPONSE_0_WB_ANY" 
"OFFCORE_RESPONSE_0_PF_L2_DATA_RD_ANY" 
"OFFCORE_RESPONSE_0_PF_L2_RFO_ANY" 
"OFFCORE_RESPONSE_0_PF_L2_CODE_RD_ANY" 
"OFFCORE_RESPONSE_0_PF_L3_DATA_RD_ANY" 
"OFFCORE_RESPONSE_0_PF_L3_RFO_ANY" 
"OFFCORE_RESPONSE_0_PF_L3_CODE_RD_ANY" 
"OFFCORE_RESPONSE_0_SPLIT_LOCK_UC_LOCK_ANY" 
"OFFCORE_RESPONSE_0_STREAMING_STORES_ANY" 
"OFFCORE_RESPONSE_0_OTHER_ANY" 
"OFFCORE_RESPONSE_1_OPTIONS" 
"OFFCORE_RESPONSE_1_LOCAL_DRAM" 
"OFFCORE_RESPONSE_1_REMOTE_DRAM" 
"OFFCORE_RESPONSE_1_DMND_DATA_RD_ANY" 
"OFFCORE_RESPONSE_1_DMND_RFO_ANY" 
"OFFCORE_RESPONSE_1_DMND_CODE_RD_ANY" 
"OFFCORE_RESPONSE_1_WB_ANY" 
"OFFCORE_RESPONSE_1_PF_L2_DATA_RD_ANY" 
"OFFCORE_RESPONSE_1_PF_L2_RFO_ANY" 
"OFFCORE_RESPONSE_1_PF_L2_CODE_RD_ANY" 
"OFFCORE_RESPONSE_1_PF_L3_DATA_RD_ANY" 
"OFFCORE_RESPONSE_1_PF_L3_RFO_ANY" 
"OFFCORE_RESPONSE_1_PF_L3_CODE_RD_ANY" 
"OFFCORE_RESPONSE_1_SPLIT_LOCK_UC_LOCK_ANY" 
"OFFCORE_RESPONSE_1_STREAMING_STORES_ANY" 
"OFFCORE_RESPONSE_1_OTHER_ANY"
)

CBOX0=("FAST_ASSERTED" 
"RXR_OCCUPANCY_IRQ" 
"RXR_OCCUPANCY_IRQ_REJ" 
"RXR_OCCUPANCY_IPQ" 
"RXR_OCCUPANCY_PRQ_REJ" 
"RXR_OCCUPANCY_IRQ_IPQ" 
"RXR_OCCUPANCY_IRQ_PRQ_REJ" 
"RXR_OCCUPANCY_IPQ_PRQ_REJ" 
"TOR_OCCUPANCY_OPCODE" 
"TOR_OCCUPANCY_MISS_OPCODE" 
"TOR_OCCUPANCY_EVICTION" 
"TOR_OCCUPANCY_ALL" 
"TOR_OCCUPANCY_MISS_ALL" 
"TOR_OCCUPANCY_WB" 
"TOR_OCCUPANCY_LOCAL_OPCODE" 
"TOR_OCCUPANCY_MISS_LOCAL_OPCODE" 
"TOR_OCCUPANCY_LOCAL" 
"TOR_OCCUPANCY_MISS_LOCAL" 
"TOR_OCCUPANCY_NID_OPCODE" 
"TOR_OCCUPANCY_NID_MISS_OPCODE" 
"TOR_OCCUPANCY_NID_EVICTION" 
"TOR_OCCUPANCY_NID_ALL" 
"TOR_OCCUPANCY_NID_MISS_ALL" 
"TOR_OCCUPANCY_NID_WB" 
"TOR_OCCUPANCY_REMOTE_OPCODE" 
"TOR_OCCUPANCY_MISS_REMOTE_OPCODE" 
"TOR_OCCUPANCY_REMOTE" 
"TOR_OCCUPANCY_MISS_REMOTE" 
"SBO_CREDIT_OCCUPANCY_AD" 
"SBO_CREDIT_OCCUPANCY_BL"
)

CBOX=("CBOX_CLOCKTICKS" 
"TXR_INSERTS_AD_CACHE" 
"TXR_INSERTS_AK_CACHE" 
"TXR_INSERTS_BL_CACHE" 
"TXR_INSERTS_IV_CACHE" 
"TXR_INSERTS_AD_CORE" 
"TXR_INSERTS_AK_CORE" 
"TXR_INSERTS_BL_CORE" 
"TXR_ADS_USED_AD" 
"TXR_ADS_USED_AK" 
"TXR_ADS_USED_BL" 
"RING_BOUNCES_AD" 
"RING_BOUNCES_AK" 
"RING_BOUNCES_BL" 
"RING_BOUNCES_IV" 
"RING_SRC_THRTL" 
"BOUNCE_CONTROL" 
"RXR_EXT_STARVED_IRQ" 
"RXR_EXT_STARVED_IPQ" 
"RXR_EXT_STARVED_PRQ" 
"RXR_EXT_STARVED_ISMQ_BIDS" 
"RXR_INSERTS_IRQ" 
"RXR_INSERTS_IRQ_REJ" 
"RXR_INSERTS_IPQ" 
"RXR_INSERTS_PRQ" 
"RXR_INSERTS_PRQ_REJ" 
"RING_AD_USED_UP_EVEN" 
"RING_AD_USED_UP_ODD" 
"RING_AD_USED_UP" 
"RING_AD_USED_DOWN_EVEN" 
"RING_AD_USED_DOWN_ODD" 
"RING_AD_USED_DOWN" 
"RING_AD_USED_ANY" 
"RING_AK_USED_UP_EVEN" 
"RING_AK_USED_UP_ODD" 
"RING_AK_USED_UP" 
"RING_AK_USED_DOWN_EVEN" 
"RING_AK_USED_DOWN_ODD" 
"RING_AK_USED_DOWN" 
"RING_AK_USED_ANY" 
"RING_BL_USED_UP_EVEN" 
"RING_BL_USED_UP_ODD" 
"RING_BL_USED_UP" 
"RING_BL_USED_DOWN_EVEN" 
"RING_BL_USED_DOWN_ODD" 
"RING_BL_USED_DOWN" 
"RING_BL_USED_ANY" 
"RING_IV_USED_UP" 
"RING_IV_USED_DN" 
"RING_IV_USED_ANY" 
"COUNTER0_OCCUPANCY" 
"RXR_IPQ_RETRY2_AD_SBO" 
"RXR_IPQ_RETRY2_TARGET" 
"RXR_IRQ_RETRY2_AD_SBO" 
"RXR_IRQ_RETRY2_BL_SBO" 
"RXR_IRQ_RETRY2_TARGET" 
"RXR_ISMQ_RETRY2_AD_SBO" 
"RXR_ISMQ_RETRY2_BL_SBO" 
"RXR_ISMQ_RETRY2_TARGET" 
"RXR_IPQ_RETRY_ANY" 
"RXR_IPQ_RETRY_FULL" 
"RXR_IPQ_RETRY_ADDR_CONFLICT" 
"RXR_IPQ_RETRY_QPI_CREDITS" 
"RXR_IRQ_RETRY_ANY" 
"RXR_IRQ_RETRY_FULL" 
"RXR_IRQ_RETRY_ADDR_CONFLICT" 
"RXR_IRQ_RETRY_RTID" 
"RXR_IRQ_RETRY_QPI_CREDITS" 
"RXR_IRQ_RETRY_IIO_CREDITS" 
"RXR_IRQ_RETRY_NID" 
"RXR_ISMQ_RETRY_ANY" 
"RXR_ISMQ_RETRY_FULL" 
"RXR_ISMQ_RETRY_RTID" 
"RXR_ISMQ_RETRY_QPI_CREDITS" 
"RXR_ISMQ_RETRY_IIO_CREDITS" 
"RXR_ISMQ_RETRY_NID" 
"RXR_ISMQ_RETRY_WB_CREDITS" 
"LLC_LOOKUP_DATA_READ" 
"LLC_LOOKUP_WRITE" 
"LLC_LOOKUP_REMOTE_SNOOP" 
"LLC_LOOKUP_ANY" 
"LLC_LOOKUP_READ" 
"LLC_LOOKUP_NID" 
"TOR_INSERTS_ALL" 
"TOR_INSERTS_WB" 
"TOR_INSERTS_LOCAL_OPCODE" 
"TOR_INSERTS_MISS_LOCAL_OPCODE" 
"TOR_INSERTS_LOCAL" 
"TOR_INSERTS_MISS_LOCAL" 
"TOR_INSERTS_NID_OPCODE" 
"TOR_INSERTS_NID_MISS_OPCODE" 
"TOR_INSERTS_NID_EVICION" 
"TOR_INSERTS_NID_ALL" 
"TOR_INSERTS_NID_MISS_ALL" 
"TOR_INSERTS_NID_WB" 
"TOR_INSERTS_REMOTE_OPCODE" 
"TOR_INSERTS_MISS_REMOTE_OPCODE" 
"TOR_INSERTS_REMOTE" 
"TOR_INSERTS_MISS_REMOTE" 
"LLC_VICTIMS_M" 
"LLC_VICTIMS_E" 
"LLC_VICTIMS_I" 
"LLC_VICTIMS_F" 
"LLC_VICTIMS_MEIF" 
"LLC_VICTIMS_MISS" 
"LLC_VICTIMS_NID" 
"MISC_RSPI_WAS_FSE" 
"MISC_WC_ALIASING" 
"MISC_STARTED" 
"MISC_RFO_HIT_S" 
"MISC_CVZERO_PREFETCH_VICTIM" 
"MISC_CVZERO_PREFETCH_MISS" 
"SBO_CREDITS_ACQUIRED_AD" 
"SBO_CREDITS_ACQUIRED_BL")


FILENAME=""
timestamp=$(date +"%Y%m%d_%H%M%S")

for arg in "$@"; do
    FILENAME="$FILENAME$arg"
done

FILENAME="${FILENAME}_m1=${mal1_core}_m2=${mal2_core}_m3=${mal3_core}_m4=${mal4_core}_m5=${mal5_core}_m6=${mal6_core}_n1=${normal1_core}_n2=${normal2_core}_n3=${normal3_core}_n4=${normal4_core}_n5=${normal5_core}_n6=${normal6_core}_${timestamp}"

pid_mal=
output_log="$root/unprocessed_data/$FILENAME.log"
output_log_temp="$root/unprocessed_data/$FILENAME-temp.log"
output_log_temp_err="$root/unprocessed_data/$FILENAME-temp_err.log"

if [ -e "$output_log" ]; then
    read -p "$output_log already exists, do you want to delete it? (y/n) " choice
    if [ "$choice" == "y" ]; then
    rm "$output_log"
    echo "File deleted."
    else
    echo "File not deleted. Exiting script."
    exit 0
    fi
fi

if [ -e "$output_log_temp" ]; then
    rm "$output_log_temp"
    rm "$output_log_temp_err"
fi

FIXED_COUNTERS=TEMP_CORE:TMP0,PWR_PKG_ENERGY:PWR0,PWR_PP0_ENERGY:PWR1,PWR_DRAM_ENERGY:PWR3,VOLTAGE_CORE:VTG0,CPU_CLK_UNHALTED_CORE:FIXC1,CPU_CLK_UNHALTED_REF:FIXC2
PMC_REGISTERS=("PMC0" "PMC1" "PMC2" "PMC3")
CBOX0_REGISTER=("CBOX0C0" "CBOX1C0" "CBOX2C0" "CBOX3C0" "CBOX4C0" "CBOX5C0")
CBOX_REGISTERS=("CBOX0C1" "CBOX0C2" "CBOX0C3"
 "CBOX1C1" "CBOX1C2" "CBOX1C3"
 "CBOX2C1" "CBOX2C2" "CBOX2C3"
 "CBOX3C1" "CBOX3C2" "CBOX3C3"
 "CBOX4C1" "CBOX4C2" "CBOX4C3"
 "CBOX5C1" "CBOX5C2" "CBOX5C3")

rand_value=$rand_value / 1000
while true; do
    PMC_COUNTERS=
    CBOX_COUNTERS=
    CBOX0_COUNTERS=
    pmc_items=("${PMC[@]:0:4}")
    if [ ${#pmc_items[@]} -gt 0 ]; then
    for i in "${!pmc_items[@]}"; do
        item="${pmc_items[i]}"
        if [ $i -lt 4 ]; then
            PMC_COUNTERS="$PMC_COUNTERS,$item:${PMC_REGISTERS[i]}"
        fi
    done
    PMC=("${PMC[@]:4}")
    fi

    PMC_COUNTERS="${PMC_COUNTERS#,}"

    cbox0_items=("${CBOX[@]:0:6}")
    if [ ${#cbox0_items[@]} -gt 0 ]; then
        for i in "${!cbox0_items[@]}"; do
            if [ $i -lt 6 ]; then
                CBOX0_COUNTERS="$CBOX0_COUNTERS,$cbox0_items:${CBOX0_REGISTERS[i]}"
            fi
        done
        CBOX0=("${CBOX0[@]:6}") 
    fi
    CBOX0_COUNTERS="${CBOX0_COUNTERS#,}"

    cbox_items=("${CBOX[@]:0:18}")
    if [ ${#cbox_items[@]} -gt 0 ]; then
        for i in "${!cbox_items[@]}"; do
            if [ $i -lt 18 ]; then
                CBOX_COUNTERS="$CBOX_COUNTERS,$cbox_items:${CBOX_REGISTERS[i]}"
            fi
        done
        CBOX=("${CBOX[@]:18}") 
    fi
    CBOX_COUNTERS="${CBOX_COUNTERS#,}"

    if [ ${#PMC[@]} -eq 0 ] && [ ${#CBOX[@]} -eq 0 ] && [ ${#CBOX0[@]} -eq 0 ]; then
        break
    fi

        likwid_command="likwid-perfctr -f -t 10ms -C 0-3 -g "

    if [ -n "$FIXED_COUNTERS" ]; then
        likwid_command+="$FIXED_COUNTERS"
    fi

    if [ -n "$PMC_COUNTERS" ]; then
        likwid_command+=",$PMC_COUNTERS"
    fi

    if [ -n "$CBOX_COUNTERS" ]; then
        likwid_command+=",$CBOX_COUNTERS"
    fi

    if [ -n "$UBOX0_COUNTER" ]; then
        likwid_command+=",$UBOX0_COUNTER"
    fi

    if [ -n "$UBOX1_COUNTER" ]; then
        likwid_command+=",$UBOX1_COUNTER"
    fi

    for arg in "$@"; do
    likwid_command="$likwid_command $arg"
    done
    echo $likwid_command

    if [ -n "$mal1_core" ]; then
        random_number=$(( (RANDOM % $rand_value) + 1 ))
        (sleep "$random_number"; taskset -c "$mal1_core" "$mal1_command" > /dev/null 2>&1) &
    fi

    if [ -n "$mal2_core" ]; then
        random_number=$(( (RANDOM % $rand_value) + 1 ))
        (sleep "$random_number"; taskset -c "$mal2_core" "$mal2_command" > /dev/null 2>&1) &
    fi

    if [ -n "$mal3_core" ]; then
        random_number=$(( (RANDOM % $rand_value) + 1 ))
        (sleep "$random_number"; taskset -c "$mal3_core" "$mal3_command" > /dev/null 2>&1) &
    fi

    if [ -n "$mal4_core" ]; then
        random_number=$(( (RANDOM % $rand_value) + 1 ))
        (sleep "$random_number"; taskset -c "$mal4_core" "$mal4_command" > /dev/null 2>&1) &
    fi

    if [ -n "$mal5_core" ]; then
        random_number=$(( (RANDOM % $rand_value) + 1 ))
        (sleep "$random_number"; taskset -c "$mal5_core" "$mal5_command" > /dev/null 2>&1) &
    fi

    if [ -n "$mal6_core" ]; then
        random_number=$(( (RANDOM % $rand_value) + 1 ))
        (sleep "$random_number"; taskset -c "$mal6_core" "$mal6_command" > /dev/null 2>&1) &
    fi
    
    if [ -n "$normal1_core" ]; then
        taskset -c  $normal1_core $normal1_command &
    fi

    if [ -n "$normal2_core" ]; then
        taskset -c  $normal2_core $normal2_command &
    fi

    if [ -n "$normal3_core" ]; then
        taskset -c  $normal3_core $normal3_command &
    fi

    if [ -n "$normal4_core" ]; then
        taskset -c  $normal4_core $normal4_command &
    fi

    if [ -n "$normal5_core" ]; then
        taskset -c  $normal5_core $normal5_command &
    fi

    if [ -n "$normal6_core" ]; then
        taskset -c  $normal6_core $normal6_command &
    fi

    $likwid_command > ${output_log_temp} 2> ${output_log_temp_err}
    wait $!
    grep '^# GID|EventCount|CpuCount|Total runtime \[s]' $output_log_temp >> "$output_log"
    cat "$output_log_temp_err" >> "$output_log"
    cleanup ITR
done

make -C $root/normal clean
echo "Performance counter data saved to $output_log"
rm "$output_log_temp"
rm "$output_log_temp_err"